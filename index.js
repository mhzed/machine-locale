// Generated by CoffeeScript 1.8.0
(function() {
  var exec, locale, nixLocale, os, winLocale, _fmt;

  exec = require("child_process").exec;

  os = require("os");

  locale = void 0;

  module.exports = function(cb) {
    var platFormSpecific, platformGetLocale;
    if (locale) {
      return setImmediate(function() {
        return cb(locale);
      });
    }
    platFormSpecific = {
      'win32': winLocale,
      'win64': winLocale
    };
    platformGetLocale = platFormSpecific[os.platform()];
    if (platformGetLocale) {
      return platformGetLocale(function(err, _ret) {
        return cb(err, locale = _ret);
      });
    } else {
      return nixLocale(function(err, _ret) {
        return cb(err, locale = _ret);
      });
    }
  };

  _fmt = function(loc) {
    return loc.toLowerCase().replace("_", "-");
  };

  nixLocale = function(cb) {
    return exec("locale | grep LANG=", function(err, stdout, stderr) {
      var m;
      if (err) {
        return cb(err);
      }
      m = /LANG="?(\w{2}[-_]\w{2}).*"?/.exec(stdout);
      if (m) {
        return cb(null, _fmt(m[1]));
      } else {
        return cb(new Error("Output parse failed"));
      }
    });
  };

  winLocale = function(cb) {
    return exec("systeminfo", function(err, stdout, stderr) {
      var line, m, _i, _len, _ref;
      if (err) {
        return cb(err);
      }
      _ref = stdout.split("\n");
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        line = _ref[_i];
        if (!(/System Locale:/.test(line))) {
          continue;
        }
        m = /System Locale:\s*(\w{2}[-_]\w{2}).*/.exec(line);
        if (m) {
          cb(null, _fmt(m[1]));
        } else {
          cb(new Error("Output parse failed"));
        }
        return;
      }
      return cb(new Error("Output parse failed"));
    });
  };

  if (require.main === module) {
    module.exports(function(err, loc) {
      if (err) {
        return console.log(err);
      } else {
        return console.log(loc);
      }
    });
  }

}).call(this);

//# sourceMappingURL=index.js.map
